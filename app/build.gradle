apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.alp.usermanager"
        minSdkVersion 23
        targetSdkVersion 28

        versionCode rootProject.ext.versionCode
        versionName getBuildVersionName()

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField("String", "API_BASE_URL", "\"${api_base_url}\"")
        }
        release {
            buildConfigField("String", "API_BASE_URL", "\"${api_base_url}\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:support-compat:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "com.android.support:design:28.0.0"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation "com.squareup.retrofit2:retrofit:2.5.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.5.0"
    implementation "com.squareup.retrofit2:converter-gson:2.5.0"

    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation 'com.github.bumptech.glide:glide:3.8.0'

    testİmplementation 'junit:junit:4.12'
    androidTestİmplementation 'com.android.support.test:runner:1.0.2'
    androidTestİmplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

def getPropertiesFile() {
    return file("${project.rootDir}/gradle.properties")
}

def getBuildVersionName() {
    Properties properties = new Properties()
    def propsFile = getPropertiesFile()
    if (propsFile.canRead()) {

        properties.load(propsFile.newDataInputStream())
        def major = properties.getProperty("versionMajor") as String
        def minor = properties.getProperty("versionMinor") as String
        def patch = properties.getProperty("versionPatch") as String
        def build = properties.getProperty("versionBuild") as String

        def version = major + "." + minor
        if (build != "0") {
            version += "." + patch + "." + build
        } else if (patch != "0") {
            version += "." + patch
        }
        return version

    } else {
        throw new GradleException("Versionname : unable to find gradle.properties file : \n" + propsFile.absolutePath)
    }
}
